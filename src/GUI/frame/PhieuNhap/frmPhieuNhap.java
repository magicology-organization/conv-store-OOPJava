/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.frame.PhieuNhap;

import DAO.PhieuNhap.PhieuNhapDAO;
import GUI.Main;
import GUI.form.PhieuNhap.formThemPN;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author ADMIN
 */
public class frmPhieuNhap extends javax.swing.JPanel {
    private int startIndex = 0;
    private final SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
    private final DecimalFormat currencyFormat = new DecimalFormat("#,### VND");
    /**
     * Creates new form frmPhieuNhap
     */
    public frmPhieuNhap() {
        initComponents();
        configureTable();
        // Thêm sự kiện cuộn bảng
        scrollTableCenter.getVerticalScrollBar().addAdjustmentListener(e -> {
            JScrollBar vertical = scrollTableCenter.getVerticalScrollBar();
            int max = vertical.getMaximum();
            int current = vertical.getValue();
            int visible = vertical.getVisibleAmount();

            // Kiểm tra nếu người dùng đã cuộn đến cuối bảng
            if (current + visible >= max) {
                startIndex += 10; // Tăng chỉ mục bắt đầu để tải dữ liệu tiếp theo
                loadDataTable(); // Tải thêm dữ liệu
            }
        });
    }
    private void configureTable() {
        // Ngăn không cho phép người dùng chỉnh sửa bảng
        table.setDefaultEditor(Object.class, null); // Điều này vô hiệu hóa khả năng chỉnh sửa của bất kỳ ô nào trong
                                                      // bảng.

        // Căn giữa cho tất cả các cell trong bảng
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        // Căn giữa cho từng cột
        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }

        // Ngăn không cho phép chọn nhiều dòng
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    }
    private void loadDataTable() {
        javax.swing.table.DefaultTableModel model =
            (javax.swing.table.DefaultTableModel) table.getModel();
        model.setRowCount(0);

        PhieuNhapDAO dao = new PhieuNhapDAO();
        java.util.List<Object[]> list = dao.findAllWithDetails();

        int stt = 1;
        for (Object[] row : list) {
            // row = { maPN, tenNCC, soDienThoai, tenNV, thoiGian(LocalDateTime), tong(BigDecimal) }
            java.time.LocalDateTime ldt = (java.time.LocalDateTime) row[4];
            String ngayNhap = dateFormat.format(java.sql.Timestamp.valueOf(ldt));

            String tongTien = currencyFormat.format((java.math.BigDecimal) row[5]);

            model.addRow(new Object[]{
                stt++,
                row[0],       // Mã phiếu nhập
                row[1],       // Tên nhà cung cấp
                row[2],       // SĐT NCC
                row[3],       // Tên nhân viên
                ngayNhap,     // Ngày nhập (format)
                tongTien      // Tổng hóa đơn (format)
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        pNorth = new javax.swing.JPanel();
        titleName = new javax.swing.JLabel();
        pCenter = new javax.swing.JPanel();
        scrollTableCenter = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        pSouth = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        Panel.setMinimumSize(new java.awt.Dimension(1200, 600));
        Panel.setName(""); // NOI18N
        Panel.setLayout(new java.awt.BorderLayout());

        pNorth.setBackground(new java.awt.Color(204, 255, 204));
        pNorth.setMinimumSize(new java.awt.Dimension(1200, 50));
        pNorth.setName(""); // NOI18N
        pNorth.setPreferredSize(new java.awt.Dimension(1200, 50));
        pNorth.setLayout(new java.awt.BorderLayout());

        titleName.setBackground(new java.awt.Color(0, 0, 0));
        titleName.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleName.setText("Danh sách phiếu nhập");
        titleName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        titleName.setMinimumSize(new java.awt.Dimension(1200, 32));
        titleName.setPreferredSize(new java.awt.Dimension(1200, 32));
        pNorth.add(titleName, java.awt.BorderLayout.CENTER);

        Panel.add(pNorth, java.awt.BorderLayout.NORTH);

        pCenter.setMinimumSize(new java.awt.Dimension(0, 0));
        pCenter.setLayout(new java.awt.BorderLayout());

        scrollTableCenter.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollTableCenter.setMinimumSize(new java.awt.Dimension(1200, 500));
        scrollTableCenter.setPreferredSize(new java.awt.Dimension(1200, 500));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã phiếu nhập", "Tên nhà cung cấp", "SĐT", "Tên nhân viên", "Ngày nhập", "Tổng hóa đơn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setMinimumSize(null);
        table.setName(""); // NOI18N
        table.setPreferredSize(null);
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.setShowHorizontalLines(true);
        scrollTableCenter.setViewportView(table);

        pCenter.add(scrollTableCenter, java.awt.BorderLayout.CENTER);

        Panel.add(pCenter, java.awt.BorderLayout.CENTER);

        pSouth.setBackground(new java.awt.Color(222, 222, 222));
        pSouth.setMinimumSize(new java.awt.Dimension(1200, 50));
        pSouth.setPreferredSize(new java.awt.Dimension(1200, 50));

        btnThem.setBackground(new java.awt.Color(15, 204, 102));
        btnThem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setText("Thêm");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setMaximumSize(new java.awt.Dimension(85, 35));
        btnThem.setMinimumSize(new java.awt.Dimension(85, 35));
        btnThem.setPreferredSize(new java.awt.Dimension(105, 35));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pSouth.add(btnThem);

        Panel.add(pSouth, java.awt.BorderLayout.SOUTH);

        add(Panel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
        // Tạo đối tượng frmPhieuNhapThem
        formThemPN formThem = new formThemPN();
        // Lấy đối tượng Main (parent frame)
        Main parentFrame = (Main) SwingUtilities.getWindowAncestor(this);
        
        // Gọi phương thức replaceMainPanel để thay thế nội dung trong mainPanel
        parentFrame.replaceMainPanel(formThem);
        
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this,
                "Không thể mở form thêm phiếu nhập: " + ex.getMessage(),
                "Lỗi", 
                JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnThemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JButton btnThem;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pNorth;
    private javax.swing.JPanel pSouth;
    private javax.swing.JScrollPane scrollTableCenter;
    private javax.swing.JTable table;
    private javax.swing.JLabel titleName;
    // End of variables declaration//GEN-END:variables
}
